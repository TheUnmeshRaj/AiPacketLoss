<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">

  <title>Conference Room - Professional Video Calling</title>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="/styles/new.css">
  <script>
    const ROOM_ID = "<%= roomId %>";
  </script>

  <script defer src="https://unpkg.com/peerjs@latest/dist/peerjs.min.js"></script>
  <script defer src="/socket.io/socket.io.js"></script>
  <script defer src="/script.js"></script>
</head>

<body>

  <header class="header">
    <div class="header-left">
      <a href="#" class="logo">
        <i class="fas fa-video"></i>
        <span>ConferenceRoom</span>
      </a>
      <div class="room-info">
        <div class="room-id">Room ID: <span id="room-id-display">Room</span></div>
        <div class="participants-count">Participants: <span id="participants-count">1</span></div>
      </div>
    </div>
    <div class="header-right">
      <div class="time-display" id="time-display">00:00</div>
      <button class="settings-btn" id="settings-btn">
        <i class="fas fa-cog"></i>
        Settings
      </button>
    </div>
  </header>

  <div class="main-container">
    <div id="video-grid">
    </div>
  </div>

  <div id="controls">
    <div class="control-group">
      <button class="control-btn muted" id="toggle-audio" title="Toggle Microphone">
        <i class="fas fa-microphone"></i>
      </button>
      <button class="control-btn muted" id="toggle-video" title="Toggle Camera">
        <i class="fas fa-video"></i>
      </button>
      <button class="control-btn" id="screen-share" title="Share Screen">
        <i class="fas fa-desktop"></i>
      </button>
      <button class="control-btn" id="take-notes" title="Start Noting">
        <i class="fas fa-sticky-note"></i>
      </button>
    </div>

    <div class="control-group">
      <button class="control-btn" id="chat-toggle" title="Toggle Chat">
        <i class="fas fa-comment"></i>
      </button>
      <button class="control-btn" id="participants-list" title="Participants">
        <i class="fas fa-users"></i>
      </button>

      <button class="control-btn" id="end-call" title="End Call">
        <i class="fas fa-phone-slash"></i>
      </button>
      <button class="more-options" id="more-options">
        <i class="fas fa-ellipsis-h"></i>
      </button>
    </div>

  </div>


  <script>
    document.addEventListener('DOMContentLoaded', function() {
      setTimeout(() => {
        document.getElementById('loading-overlay').style.display = 'none';
      }, 1500);

      function updateTime() {
        const now = new Date();
        const timeString = now.toLocaleTimeString('en-US', {
          hour12: false,
          hour: '2-digit',
          minute: '2-digit'
        });
        document.getElementById('time-display').textContent = timeString;
      }

      updateTime();
      setInterval(updateTime, 1000);

      document.getElementById('room-id-display').textContent = ROOM_ID;
    });


    document.getElementById('toggle-audio').addEventListener('click', function() {
      const button = this;
      const icon = button.querySelector('i');
      const isMuted = button.classList.contains('muted');

      if (isMuted) {
        button.classList.remove('muted');
        icon.className = 'fas fa-microphone-slash';
      } else {
        button.classList.add('muted');
        icon.className = 'fas fa-microphone';
      }

      toggleAudio();
    });

    document.getElementById('toggle-video').addEventListener('click', function() {
      const button = this;
      const icon = button.querySelector('i');
      const isMuted = button.classList.contains('muted');

      if (isMuted) {
        button.classList.remove('muted');
        icon.className = 'fas fa-video-slash';
      } else {
        button.classList.add('muted');
        icon.className = 'fas fa-video';
      }

      toggleVideo();
    });

    document.getElementById('screen-share').addEventListener('click', function() {
      const button = this;
      const icon = button.querySelector('i');

      if (button.classList.contains('active')) {
        button.classList.remove('active');
        icon.className = 'fas fa-desktop';
      } else {
        button.classList.add('active');
        icon.className = 'fas fa-stop';
      }
    });

    document.getElementById('end-call').addEventListener('click', function() {

      socket.emit('left-call', myPeer.id);
      if (myPeer) myPeer.destroy();
      if (myStream) myStream.getTracks().forEach(track => track.stop());
      socket.disconnect();
      window.location.href = '/left';

      setTimeout(() => {
        alert('Call ended. In a real implementation, this would redirect to the goodbye page.');
      }, 1000);
    });

    document.getElementById('chat-toggle').addEventListener('click', function() {
      const button = this;

      if (button.classList.contains('active')) {
        button.classList.remove('active');
      } else {
        button.classList.add('active');
      }
    });

    document.getElementById('participants-list').addEventListener('click', function() {});

    document.getElementById('settings-btn').addEventListener('click', function() {

      fetch('/run-something')
        .then(res => res.text())
        .then(console.log);
    });

    document.getElementById('more-options').addEventListener('click', function() {});

    navigator.mediaDevices.getUserMedia({
        video: true,
        audio: true
      })
      .then(stream => {
        const videoElements = document.querySelectorAll('video');
        if (videoElements[0]) {
          videoElements[0].srcObject = stream;
        }
      })
      .catch(err => {
        console.log('Camera access denied or not available');
      });
  </script>
</body>

</html>